#if !canImport(ObjectiveC)
    import XCTest

    extension BodyEmptyLineTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__BodyEmptyLineTests = [
            ("testFailureNoNewlineOnly", testFailureNoNewlineOnly),
            ("testSuccessCommitSubjectAndBody", testSuccessCommitSubjectAndBody),
            ("testSuccessSubjectOnly", testSuccessSubjectOnly),
        ]
    }

    extension CommitMessageTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__CommitMessageTests = [
            ("testInitializeWithDangerGitHubCommit", testInitializeWithDangerGitHubCommit),
        ]
    }

    extension DangerSwiftCommitLintConfigurationTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__DangerSwiftCommitLintConfigurationTests = [
            ("testDefaultConfiguration", testDefaultConfiguration),
            ("testDisableAllChecks", testDisableAllChecks),
            ("testDisableAllChecksWithCustomChecker", testDisableAllChecksWithCustomChecker),
            ("testWarnAllChecks", testWarnAllChecks),
            ("testWarnAllChecksWithCustomChecker", testWarnAllChecksWithCustomChecker),
        ]
    }

    extension DangerSwiftCommitLintTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__DangerSwiftCommitLintTests = [
            ("testCustomChecker", testCustomChecker),
            ("testDisableAllChecks", testDisableAllChecks),
            ("testDisableAllHasHighestPrecedence", testDisableAllHasHighestPrecedence),
            ("testFailAllIssues", testFailAllIssues),
            ("testGitCommitWithNoIssues", testGitCommitWithNoIssues),
            ("testLimitingTheCheckToTwoCommits", testLimitingTheCheckToTwoCommits),
            ("testMixedConfiguration", testMixedConfiguration),
            ("testWarnAllIssues", testWarnAllIssues),
        ]
    }

    extension RegexHelperTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__RegexHelperTests = [
            ("testFailedToMatch", testFailedToMatch),
            ("testInvalidPattern", testInvalidPattern),
            ("testSuccessfullyMatch", testSuccessfullyMatch),
        ]
    }

    extension SubjectCapitalLetterTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__SubjectCapitalLetterTests = [
            ("testEdgeCase", testEdgeCase),
            ("testFailure", testFailure),
            ("testSuccess", testSuccess),
            ("testSuccessWithNonLetterCharacters", testSuccessWithNonLetterCharacters),
        ]
    }

    extension SubjectLengthTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__SubjectLengthTests = [
            ("testFailure", testFailure),
            ("testSuccess", testSuccess),
            ("testSuccessWithGitHubMergeCommit", testSuccessWithGitHubMergeCommit),
            ("testSuccessWithGitMergeCommit", testSuccessWithGitMergeCommit),
        ]
    }

    extension SubjectPeriodTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__SubjectPeriodTests = [
            ("testFailure", testFailure),
            ("testSuccess", testSuccess),
        ]
    }

    extension SubjectWordTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__SubjectWordTests = [
            ("testFailure", testFailure),
            ("testSuccess", testSuccess),
        ]
    }

    public func __allTests() -> [XCTestCaseEntry] {
        [
            testCase(BodyEmptyLineTests.__allTests__BodyEmptyLineTests),
            testCase(CommitMessageTests.__allTests__CommitMessageTests),
            testCase(DangerSwiftCommitLintConfigurationTests.__allTests__DangerSwiftCommitLintConfigurationTests),
            testCase(DangerSwiftCommitLintTests.__allTests__DangerSwiftCommitLintTests),
            testCase(RegexHelperTests.__allTests__RegexHelperTests),
            testCase(SubjectCapitalLetterTests.__allTests__SubjectCapitalLetterTests),
            testCase(SubjectLengthTests.__allTests__SubjectLengthTests),
            testCase(SubjectPeriodTests.__allTests__SubjectPeriodTests),
            testCase(SubjectWordTests.__allTests__SubjectWordTests),
        ]
    }
#endif
