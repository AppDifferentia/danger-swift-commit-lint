#if !canImport(ObjectiveC)
    import XCTest

    extension BodyEmptyLineCheckTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__BodyEmptyLineCheckTests = [
            ("testFailureNoNewlineOnly", testFailureNoNewlineOnly),
            ("testSuccessCommitSubjectAndBody", testSuccessCommitSubjectAndBody),
            ("testSuccessSubjectOnly", testSuccessSubjectOnly),
        ]
    }

    extension CommitMessageTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__CommitMessageTests = [
            ("testInitializeWithDangerGitHubCommit", testInitializeWithDangerGitHubCommit),
        ]
    }

    extension DangerSwiftCommitLintTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__DangerSwiftCommitLintTests = [
            ("testDummy", testDummy),
        ]
    }

    extension RegexHelperTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__RegexHelperTests = [
            ("testFailedToMatch", testFailedToMatch),
            ("testInvalidPattern", testInvalidPattern),
            ("testSuccessfullyMatch", testSuccessfullyMatch),
        ]
    }

    extension SubjectCapCheckTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__SubjectCapCheckTests = [
            ("testEdgeCase", testEdgeCase),
            ("testFailure", testFailure),
            ("testSuccess", testSuccess),
            ("testSuccessWithNonLetterCharacters", testSuccessWithNonLetterCharacters),
        ]
    }

    extension SubjectLengthCheckTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__SubjectLengthCheckTests = [
            ("testFailure", testFailure),
            ("testSuccess", testSuccess),
            ("testSuccessWithGitHubMergeCommit", testSuccessWithGitHubMergeCommit),
            ("testSuccessWithGitMergeCommit", testSuccessWithGitMergeCommit),
        ]
    }

    extension SubjectPeriodCheckTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__SubjectPeriodCheckTests = [
            ("testFailure", testFailure),
            ("testSuccess", testSuccess),
        ]
    }

    extension SubjectWordCheckTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__SubjectWordCheckTests = [
            ("testFailure", testFailure),
            ("testSuccess", testSuccess),
        ]
    }

    public func __allTests() -> [XCTestCaseEntry] {
        [
            testCase(BodyEmptyLineCheckTests.__allTests__BodyEmptyLineCheckTests),
            testCase(CommitMessageTests.__allTests__CommitMessageTests),
            testCase(DangerSwiftCommitLintTests.__allTests__DangerSwiftCommitLintTests),
            testCase(RegexHelperTests.__allTests__RegexHelperTests),
            testCase(SubjectCapCheckTests.__allTests__SubjectCapCheckTests),
            testCase(SubjectLengthCheckTests.__allTests__SubjectLengthCheckTests),
            testCase(SubjectPeriodCheckTests.__allTests__SubjectPeriodCheckTests),
            testCase(SubjectWordCheckTests.__allTests__SubjectWordCheckTests),
        ]
    }
#endif
